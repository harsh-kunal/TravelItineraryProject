@inject HttpClient _client

<EditForm Model="@fligacco" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Airlines: </label>
            <div>
                <InputText @bind-Value="@fligacco.Airlines" class="form-control" />
                <ValidationMessage For="@(() => fligacco.Airlines)" />
            </div>
        </div>

        <div class="form-group">
            <label>Origin: </label>
            <div>
                <InputText @bind-Value="@fligacco.DestinationFrom" class="form-control" />
                <ValidationMessage For="@(() => fligacco.DestinationFrom)" />
            </div>
        </div>

        <div class="form-group">
            <label>Destination: </label>
            <div>
                <InputSelect @bind-Value="fligacco.TripId" class="form-control">
                    <option value=""> --Select Destination-- </option>
                    @if (Trips != null)
                    {
                        foreach (var trip in Trips)
                        {
                            <option value="@trip.Id">@trip.Destination</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => fligacco.TripId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Hotel Name: </label>
            <div>
                <InputText @bind-Value="@fligacco.AccommodationName" class="form-control" />
                <ValidationMessage For="@(() => fligacco.AccommodationName)" />
            </div>
        </div>

        <div class="form-group">
            <label>Check-in Date: </label>
            <div>
                <InputDate @bind-Value="@fligacco.StartDate" class="form-control" />
                <ValidationMessage For="@(() => fligacco.StartDate)" />
            </div>
        </div>

        <div class="form-group">
            <label>Check-out Date: </label>
            <div>
                <InputDate @bind-Value="@fligacco.EndDate" class="form-control" />
                <ValidationMessage For="@(() => fligacco.EndDate)" />
            </div>
        </div>

        <div class="form-group">
            <label>Combined Total Price: </label>
            <div>
                <InputNumber @bind-Value="@fligacco.FlighAccoFees" class="form-control" />
                <ValidationMessage For="@(() => fligacco.FlighAccoFees)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="fligaccos" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public FligAcco fligacco { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Trip> Trips;

    protected async override Task OnInitializedAsync()
    {
        Trips = await _client.GetFromJsonAsync<List<Trip>>($"{Endpoints.TripsEndpoint}");
    }

}