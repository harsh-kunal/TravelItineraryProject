@page "/schedules/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Schedule Makes</h3>
<br />

<a href="/schedules/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Schedule
</a>
<br />
<br />

@if (Schedules == null)
{
    <div class="alert alert-info">Loading Schedules...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Schedule Id</th>
                <th>Destination</th>
                <th>Schedule Start Date</th>
                <th>Schedule End Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var schedule in Schedules)
            {
                <tr>
                    <td>@schedule.TripId</td>
                    <th>@schedule.Trip.Destination</th>
                    <td>@schedule.StartDate.Date.ToString("dd MMMM yyyy")</td>
                    <td>@schedule.EndDate.Date.ToString("dd MMMM yyyy")</td>
                    <td>
                        <a href="/schedules/view/@schedule.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/schedules/edit/@schedule.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(schedule.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<Schedule> Schedules;

    protected async override Task OnInitializedAsync()
    {
        Schedules = await _client.GetFromJsonAsync<List<Schedule>>($"{Endpoints.SchedulesEndpoint}");
    }

    async Task Delete(int scheduleId)
    {
        var schedule = Schedules.First(q => q.Id == scheduleId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {schedule.StartDate}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.SchedulesEndpoint}/{scheduleId}");
            await OnInitializedAsync();
        }
    }

}
